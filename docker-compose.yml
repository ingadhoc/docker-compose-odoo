services:

  db:
    container_name: db-${ODOO_VERSION}
    image: postgres:15
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    command:
      - -p 54${ODOO_VERSION}
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    networks:
      adhoc:
        ipv4_address: 172.20.${ODOO_VERSION}.110

  aeroo:
    image: adhoc/aeroo-docs
    restart: unless-stopped
    networks:
      adhoc:

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      adhoc:

  dns:
    image: cytopia/bind:alpine-0.30
    environment:
      DNS_A: "*.localhost=172.20.0.1"
      DNS_FORWARDER: 127.0.0.11
    networks:
      adhoc:
        ipv4_address: 172.20.${ODOO_VERSION}.10

  odoo:
    # user: root
    # build:
    #     context: ./data
    #     dockerfile: Dockerfile
    image: $ODOO_IMAGE:$ODOO_MINOR
    container_name: odoo-${ODOO_VERSION}
    depends_on:
      - db
      - dns
      - aeroo
    volumes:
      - ./data/custom:/home/odoo/custom
      - default:/home/odoo/src
      - odoo_data:/home/odoo/data
    labels:
      - traefik.enable=true
      - traefik.docker.network=adhoc
      - traefik.http.services.odoo-${ODOO_VERSION}.loadbalancer.server.port=8069
      - traefik.http.routers.odoo-${ODOO_VERSION}.service=odoo-${ODOO_VERSION}
      - traefik.http.routers.odoo-${ODOO_VERSION}.entrypoints=web
      - traefik.http.routers.odoo-${ODOO_VERSION}.rule=Host(`$DOMAIN`) || HostRegexp(`{subdomain:[a-z0-9-_]+}.$DOMAIN`)
      - traefik.http.services.long-${ODOO_VERSION}.loadbalancer.server.port=8072
      - traefik.http.routers.long-${ODOO_VERSION}.rule=Host(`$DOMAIN`) || HostRegexp(`{subdomain:[a-z0-9-_]+}.$DOMAIN`) && (PathPrefix(`/longpolling`) || PathPrefix(`/websocket`))
      - traefik.http.routers.long-${ODOO_VERSION}.entrypoints=web
      - traefik.http.routers.long-${ODOO_VERSION}.service=long-${ODOO_VERSION}
    environment:
      CUSTOM_CONFIG: |-
        [options]
      CUSTOM_REQUIREMTNS: |-
        # custom pip librearies
      CUSTOM_ENTRYPOINT: |-
        #!/bin/bash
        # pip install --user --no-cache-dir -e /home/odoo/custom/odoo
        # pip install --user --no-cache-dir pyopenssl
      PGHOST: db-${ODOO_VERSION}
      PGPORT: 54${ODOO_VERSION}
      SMTP_SERVER: mailhog
      SMTP_PORT: 1025
      DBFILTER: ${DBFILTER}
      SERVER_WIDE_MODULES: ${SERVER_WIDE_MODULES}
      MAX_CRON_THREADS: ${MAX_CRON_THREADS}
      WORKERS: ${WORKERS}
      LIST_DB: ${LIST_DB}
      WITHOUT_DEMO: ${WITHOUT_DEMO}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      PROXY_MODE: ${PROXY_MODE}
      SERVER_MODE: ${SERVER_MODE}
      AEROO_DOCS_HOST: ${AEROO_DOCS_HOST}
      LIMIT_TIME_REAL_CRON: ${LIMIT_TIME_REAL_CRON}
      LIMIT_TIME_REAL: ${LIMIT_TIME_REAL}
      UNACCENT: ${UNACCENT}
      ODOO_UPGRADE_PATH: ${ODOO_UPGRADE_PATH}
      IGNORE_SRC_REPOSITORIES: ${IGNORE_SRC_REPOSITORIES}
    dns:
      - 172.20.${ODOO_VERSION}.10
    networks:
      adhoc:
        ipv4_address: 172.20.${ODOO_VERSION}.100

volumes:
  pg_data:
  odoo_data:
  default:

networks:
  adhoc:
    name: adhoc
    external: true
